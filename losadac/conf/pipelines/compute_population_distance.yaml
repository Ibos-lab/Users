_target_: population_distance.__main__.main
name: "population_distance"
area: "pfc"
output_path: ${pipelines.name}/${pipelines.preprocessing.metric}/zscore/percentile_with_nonzero/ns_idx_std1/${now:%Y_%m_%d_%H_%M_%S}/${multiruns.name}/${pipelines.area}

paths:
  input: "${workspace.data_path}/population/in_out_b1_b2/2025_01_03_12_05_07/${pipelines.area}/population.h5"
  nidpath: '${workspace.data_path}/neutral_space_idx/2025_01_08_16_17_29/${pipelines.area}/out_1st/nid_out_std1.csv'
preprocessing:
  time_before_son: ${multiruns.time_before_son}
  time_before_t1on: ${multiruns.time_before_t1on}
  sp_son: ${multiruns.sp_son}
  sp_t1on: ${multiruns.sp_t1on}
  mask_son: ${multiruns.mask_son}
  start_sample : -200
  end_sample : 850
  start_test : -400
  end_test : 550
  n_test : 1
  min_trials : 28
  nonmatch: True
  avgwin : 100
  min_sp_sec : 1
  norm : False
  zscore : True
  select_n_neu : 100
  cerotr: True
  percentile: True
  metric: 'euclidean'